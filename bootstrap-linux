#!/bin/bash
# Bootstrap an Ubuntu 12.04/Debian Wheezy/CentOS 6 machine.
#
# - Set hostname
# - Add domain name to DNS search path via /etc/network/interfaces
# - Update packages
# - Install Puppet agent.
# - Install prereqs for additional configuration

# Default values:
puppet_default_vers=3.6.0-1puppetlabs1
deb_release_default=precise
rhel_release_default=6
rhel_release_vers_default=7

# Stop on error:
set -e

function usage {
    echo "Usage: $0 [-d puppet_version] -n fqdn [-s] [-p puppetmasterFQDN [-i puppetmasterIP]] [-r release] [-v version]"
    echo "Usage: $0 -h"
    echo
    echo "  -d   Override Puppet version (default: ${puppet_default_vers})"
    echo "  -n   Set FQDN"
    echo "  -s   Use static IP addressing (Rackspace)"
    echo "  -p   FQDN of Puppetmaster"
    echo "  -r   OS release (default: precise for deboids, 6 for rhel)"
    echo "  -v   OS release version (default: 7 for rhel)"
    echo "  -i   Puppetmaster IP address, if FQDN does not resolve"
    exit 1
}

if [ `id -u` -ne 0 ] ; then
  echo "Re-run this script as root - this script modifies key system files."
  exit 1
fi

dhcp=on

while getopts "d:hi:n:p:r:sv:" flag
do
    case $flag in
	d) puppet_version=$OPTARG ;;
	i) pmip=$OPTARG ;;
	n) fqdn=$OPTARG ;;
	p) puppetmaster=$OPTARG ;;
	r) release=$OPTARG ;;
	s) dhcp=off ;;
	v) rhel_release_vers=$OPTARG ;;
	*) usage ;;
    esac
done

# Get distro, distro_family:
distro=$(cat /etc/issue | head -1 | awk '{ print $1 }')

case $distro in
    CentOS) 
	distro_family=rhel ;;
    Debian) 
	distro_family=debian ;;
    Ubuntu) 
	distro_family=debian ;;
    *)
	echo "Unsupported distro: $distro"
	usage
	;;
esac

# Check for non-default Puppet version to install:
puppet_version=${puppet_version:-$puppet_default_vers}

# Fqdn is a required argument:
if [ -z "$fqdn" ] ; then
    echo "Please set a fully-qualified domain name."
    echo
    usage
fi

# Set hostname, by removing domain from fqdn:
hostname=$(echo "${fqdn}" | sed 's/\..*$//')

if [ -z "$puppetmaster" ] ; then
    if [ ! -z "$pmip" ] ; then
	echo "Must set Puppetmaster FQDN when specifying its IP"
	echo
	usage
    fi
fi

case $distro_family in
    debian)
	# Configure hostname:
	echo $hostname > /etc/hostname
	/bin/hostname -F /etc/hostname

	# Configure networking:
	if [ $dhcp == 'on' ]; then
	    domain=`echo ${fqdn} | sed 's/^[^.]*\.//'`
	    cat > /etc/network/interfaces <<EOF
auto lo eth0
iface lo inet loopback

iface eth0 inet dhcp
  dns-domain $domain
EOF
	    /usr/sbin/service networking stop
	    /usr/sbin/service networking start
	fi

	# Add puppet repo:
	/usr/bin/curl -L -o /tmp/puppetlabs-release.deb http://apt.puppetlabs.com/puppetlabs-release-${release:=$deb_release_default}.deb
	/usr/bin/dpkg -i /tmp/puppetlabs-release.deb

	# Update installed packages:
	/usr/bin/apt-get update
	/usr/bin/apt-get -y dist-upgrade

	# Add puppet agent:
	/usr/bin/apt-get -y install puppet=${puppet_version} puppet-common=${puppet_version}

	# Add additional packages:
	/usr/bin/apt-get -y install git

	# Add IP address and hostname to /etc/hosts:
	hosts_tmp=$(mktemp)
	chmod 644 $hosts_tmp
	ip=$(facter ipaddress)
	echo "127.0.1.1 ${fqdn} ${hostname}" > $hosts_tmp
	grep -v 127.0.1.1 /etc/hosts >> $hosts_tmp
	mv $hosts_tmp /etc/hosts

	if [ ! -z "$puppetmaster" ] ; then
	    cat > /etc/puppet/puppet.conf <<EOF
[main]
logdir=/var/log/puppet
vardir=/var/lib/puppet
ssldir=/var/lib/puppet/ssl
rundir=/var/run/puppet
factpath=\$vardir/lib/facter
server = $puppetmaster

[master]
# These are needed when the puppetmaster is run by passenger
# and can safely be removed if webrick is used.
ssl_client_header = SSL_CLIENT_S_DN 
ssl_client_verify_header = SSL_CLIENT_VERIFY

EOF

	    if [ ! -z "$pmip" ] ; then
		pmhostname=$(echo "${puppetmaster}" | sed 's/\..*$//')
		echo "$pmip $puppetmaster $pmhostname" >> /etc/hosts
	    fi
	    
	fi
	;;
    rhel)
	# Configure hostname:
	/bin/sed -i '/^HOSTNAME=/d' /etc/sysconfig/network
	echo "HOSTNAME=${hostname}" >> /etc/sysconfig/network
	/bin/hostname $hostname

	# Configure networking - assume only eth0!:
	if [[ $dhcp == 'on' ]] ; then
	    /bin/sed -i '/^BOOTPROTO=/d' /etc/sysconfig/network-scripts/ifcfg-eth0
	    echo 'BOOTPROTO="dhcp"' >> /etc/sysconfig/network-scripts/ifcfg-eth0
	fi
	/sbin/service network restart

	# Add puppet repo:
	/bin/rpm -ivh https://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-${release:=$rhel_release_default}-${rhel_release_vers:=$rhel_release_vers_default}.noarch.rpm

	# Update installed packages:
	/usr/bin/yum -y update
	;;
esac
echo "Bootstrap complete."
